{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-09-28T01:17:36.487780+00:00",
  "repo": "wilaw/carp",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOPVWI587DoCKu",
      "title": "Two minor editorial fixes",
      "url": "https://github.com/wilaw/carp/issues/1",
      "state": "CLOSED",
      "author": "yekuiwang",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "1)\tSection 3.1: In the following, change \"A CMAF header is sequence of\" to \"A CMAF header is **a** sequence of\" (adding 'a'):\n\n**A CMAF header is sequence of** CMAF constrained ISO BMFF boxes that do not reference any media samples, but are associated with a CMAF track and are necessary for initializing the decoding of the subsequent CMAF fragments.\n\n2)\tSection 3.2: In the following, change the beginning of the second sentence from \"Media time-aligned requires\" to \"Mandating the tracks being media time-aligned requires\":\n\nThe MOQT Group numbers within these switching set tracks MUST be media time-aligned. Media time-aligned requires that the presentation time of the first media sample contained within the first MOQT Object of each MOQT Group is identical.\n",
      "createdAt": "2025-08-01T00:12:11Z",
      "updatedAt": "2025-08-26T12:24:44Z",
      "closedAt": "2025-08-26T12:24:44Z",
      "comments": []
    },
    {
      "number": 2,
      "id": "I_kwDOPVWI587DoGJh",
      "title": "Signalling of SAP type and earliest presentation time",
      "url": "https://github.com/wilaw/carp/issues/2",
      "state": "CLOSED",
      "author": "yekuiwang",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Subclause 9.2.9 of the CMAF spec specifies additional random access pictures within CMAF video fragments, as follows:\n\n> When coded video sequences have durations longer than 2 seconds, pictures of SAP type 3 should be encoded every 2 seconds or less to provide additional random access video media samples.\n> \n> For longer coded video sequences and resulting CMAF fragment durations, additional type 3 SAPs (\u201copen GOP\u201d independently decodable pictures) enable independent picture decoding for fast forward, fast reverse, and resumption of normal playback, while improving visual uniformity and lowering bit rate relative to groups of pictures with type 1 o 2 SAPs limited to the equivalent random access duration.\n\nIn CARP, I think it would be useful to add signalling of such additional random access points, into the timeline track, to enable their usage for fast forward, fast reverse, and resumption of normal playback.\n\nIt is therefore proposed to add Section 3.5, titled \"Timeline track extension\" to the CARP draft, as follows:\n\n**3.5 Timeline track extension**\nThe timeline track specified in [[WARP](https://wilaw.github.io/carp/draft-law-moq-carp.html#WARP)] is extended as follows:\n\n- Instead of always consisting of 5 column elements MEDIA_PTS, GROUP_ID, OBJECT_ID, WALLCLOCK, METADATA, each row consists of either 5 column elements same as in [[WARP](https://wilaw.github.io/carp/draft-law-moq-carp.html#WARP)] or 7 column elements MEDIA_PTS, GROUP_ID, OBJECT_ID, WALLCLOCK, METADATA, SAP_TYPE, EARLIEST_PTS.\n- SAP_TYPE: the SAP type the Object begins with. This entry **MAY** be empty. The value 0 indicates that the Object does not start with an ISOBMFF stream access point. The value equal to 1, 2, or 3 indicates that the Object begins with a stream access point of SAP type 1, 2, or 3, respectively. When the Object is the first Object in the Group and this entry is not empty, the value **MUST** be equal to 1 or 2.\n- EARLIEST_PTS: the earlier media presentation timestamp of all media samples in the Object. This entry **MAY** be empty. When the SAP type of the Object begins with is equal to 2 or 3, this entry **MUST NOT** be empty.",
      "createdAt": "2025-08-01T00:20:30Z",
      "updatedAt": "2025-08-26T12:24:43Z",
      "closedAt": "2025-08-26T12:24:43Z",
      "comments": [
        {
          "author": "yekuiwang",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Since RFC 4180 does not allow variable number of elements within a row, SAP_TYPE and EARLIEST_PTS could be signalled through the METADATA element of rows of the timeline track?\n\n@wilaw Please let me know your thinking. If positive, I can try to figure out the exact text changes.",
          "createdAt": "2025-08-20T18:45:44Z",
          "updatedAt": "2025-08-20T18:45:44Z"
        },
        {
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "body": "> @wilaw Please let me know your thinking. If positive, I can try to figure out the exact text changes.\n\nYes, @yekuiwang please go ahead with a proposal. If we're going to specify metadata to describe the type of access point, then we should first consider a general scheme for metadata (that should also be applied to WARP). One that is fairly extensible is a succession of key/value pairs, formatted as strings according to RFC 8941 Structured Field Values for HTTP. We can then define a namespace for specific metadata.\n\nMEDIA_PTS,GROUP_ID,OBJECT_ID,WALLCLOCK,METADATA\n4567827,4,64,1755762854417,\"CARP.SAP_TYPE=3, CARP.EARLIEST_PTS=4569112\"",
          "createdAt": "2025-08-21T08:00:56Z",
          "updatedAt": "2025-08-21T08:00:56Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOPVWI587IDujk",
      "title": "Track-level signalling of max SAP types",
      "url": "https://github.com/wilaw/carp/issues/4",
      "state": "CLOSED",
      "author": "yekuiwang",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "DASH specifies a common Adaptation Set, Representation and Sub-Representation attribute @startWithSAP, with the following semantics:\n\nwhen present and greater than 0, specifies that in the associated Representations, each Media Segment starts with a SAP of type less than or equal to the value of this attribute value in each media stream.\nA Media Segment starts with a SAP in a media stream if the stream contains a SAP in that Media Segment, I_SAU is the index of the first access unit that follows I_SAP and I_SAP is contained in the Media Segment.\nIf not present on any level, the value is unknown.\n\nDASH also specifies an Adaptation Set attribute @subsegmentStartsWithSAP, with the following semantics:\n\nwhen greater than 0, specifies that each Subsegment with SAP_type greater than 0 starts with a SAP of type less than or equal to the value of @subsegmentStartsWithSAP. A Subsegment starts with SAP when the Subsegment contains a SAP, and for the first SAP, I_SAU is the index of the first access unit that follows I_SAP, and I_SAP is contained in the Subsegment.\nWhen not present, the value is inferred to be equal to 0. The semantics of @subsegmentStartsWithSAP equal to 0 are unspecified.\n\nBasically, in the context of both WARP and CARP, the DASH attribute @startWithSAP (if signalled in a track level) signals the max SAP type the MOQT Groups in the track start with, and in the context of CARP, the DASH attribute @subsegmentStartsWithSAP (if signalled in a track level) signals the max SAP type the MOQT Objects in the track start with.\n\nThe two indications are helpful for a client to determine whether to request certain tracks at all (e.g., if the client does not support SAP type 3, it can decide to never request a track wherein a Group may start with SAP type 3) and, if yes, how to switch between different alternative tracks when network conditions change.\n\nIt is therefore proposed to add two track-level catalog fields, named maxGrpSapType and maxObjSapType, respectively, to signal the above two indications. I.e., maxGrpSapType signals the max SAP type the MOQT Groups in the track start with, and maxObjSapType signals the max SAP type the MOQT Objects in the track start with. The maxGrpSapType applies also to WARP thus should be finally included into the WARP draft, but for the moment it can be included in the CARP draft (similarly as the general metadata scheme of the METADATA element of the timeline track).\n\n@wilaw What do you think? If positive, I can generate a PR with concrete proposed changes.\n",
      "createdAt": "2025-08-26T16:54:13Z",
      "updatedAt": "2025-09-24T20:08:54Z",
      "closedAt": "2025-09-24T20:08:54Z",
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "body": "> It is therefore proposed to add two track-level catalog fields, named maxGrpSapType and maxObjSapType, respectively, to signal the above two indications. I.e., maxGrpSapType signals the max SAP type the MOQT Groups in the track start with, and maxObjSapType signals the max SAP type the MOQT Objects in the track start with. \n\n@yekuiwang  - I think this is a good idea. Can you generate a PR with the proposed changes?\n\n> The maxGrpSapType applies also to WARP thus should be finally included into the WARP draft\n\nDoes it? WARP only references LOC, which I don't think supports ISO style Stream Access Points?\n",
          "createdAt": "2025-09-11T13:17:34Z",
          "updatedAt": "2025-09-11T13:17:34Z"
        },
        {
          "author": "yekuiwang",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Cool! Let me work on the PR.\n\n>> The maxGrpSapType applies also to WARP thus should be finally included into the WARP draft\n\n> Does it? WARP only references LOC, which I don't think supports ISO style Stream Access Points?\n\nGood point. On the other hand, ISOBMFF style SAP type is equivalent to Random Access Point (RAP) type in video codecs. For example, SAP type 1 means IDR (Instantaneous Decoding Refresh) without picture ordering, SAP type 2 means IDR with picture ordering, SAP type 3 means CRA (Clean Random Access), etc. To apply the signalling to WARP, indeed semantics need to be adapted such that the SAP terminology on the ISOBMFF level is translated to the RAP terminology in video codec level.",
          "createdAt": "2025-09-11T17:35:24Z",
          "updatedAt": "2025-09-11T17:35:24Z"
        },
        {
          "author": "yekuiwang",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@wilaw Done with the PR. There is one failing check on [Update Editor's Copy / Update Editor's Copy (pull_request)](https://github.com/wilaw/carp/actions/runs/17653671870/job/50170826777?pr=7). I took a look but could not figure out what to change to correct the error. This happened to me several times for the MOQT PRs I submitted and each time Alan Frindell helped resolved the issue. Hopefully it is also easy for you to help me fixing the error herein - thank you in any case! There are still a lot of Git stuff for me to learn.",
          "createdAt": "2025-09-11T18:34:36Z",
          "updatedAt": "2025-09-11T18:34:36Z"
        },
        {
          "author": "yekuiwang",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> [@wilaw](https://github.com/wilaw) Done with the PR. There is one failing check on [Update Editor's Copy / Update Editor's Copy (pull_request)](https://github.com/wilaw/carp/actions/runs/17653671870/job/50170826777?pr=7). I took a look but could not figure out what to change to correct the error. This happened to me several times for the MOQT PRs I submitted and each time Alan Frindell helped resolved the issue. Hopefully it is also easy for you to help me fixing the error herein - thank you in any case! There are still a lot of Git stuff for me to learn.\n\n@wilaw Let me know if I should re-generate a PR for this that can pass all the checks.",
          "createdAt": "2025-09-15T16:21:08Z",
          "updatedAt": "2025-09-15T16:21:08Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOPVWI587K1Sqy",
      "title": "Object Packaging vs CMAF media object model",
      "url": "https://github.com/wilaw/carp/issues/6",
      "state": "CLOSED",
      "author": "BpkCN",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "It would be useful to keep the packaging identical between CARP and LL-DASH, DASH, LL_HLS and HLS (with CMAF segments). With the current draft this is not the case: In \u201cObject Packaging\u201d section (3.3) it is said that each Object must contain a styp box and at least one moof + mdat box.  With CMAF format for segmented media (ISO 23000-19), the sty box is not required for Chunks, fragments or segments.\n\nThe fix could be to simply require that at least one moof and one mdat is contained in an Object (i.e. at least one CMAF Chunk per Object). The other boxes are optional. However, the first Object of a Group should be constrained to be an adaptive switching point (i.e. SAP type 1 or 2), therefore corresponding to the first CMAF Chunk in a CMAF fragment.\n\nProposed PR: #5 ",
      "createdAt": "2025-09-10T15:40:13Z",
      "updatedAt": "2025-09-24T17:24:39Z",
      "closedAt": "2025-09-24T17:24:39Z",
      "comments": []
    },
    {
      "number": 8,
      "id": "I_kwDOPVWI587Nr_yg",
      "title": "Need to describe how Common Encryption is supported and communicated",
      "url": "https://github.com/wilaw/carp/issues/8",
      "state": "OPEN",
      "author": "wilaw",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "The MPEG Common Encryption (CENC) standard, formally ISO/IEC 23001-7, is a specification that enables content providers to encrypt a single media file, typically in the ISO Base Media File Format (ISOBMFF, e.g., MP4 or fragmented MP4), and have it be decryptable by multiple, different Digital Rights Management (DRM) systems such as Widevine, PlayReady, or FairPlay. CENC achieves this \"encrypt-once, decrypt-many\" capability by defining a common, standardized method for encryption (like AES-128 in CTR or CBC mode) and a common structure for signaling the encryption metadata, including key identifiers (KIDs) and initialization vectors, while leaving the DRM-specific details of key acquisition and rights management to the individual DRM system's license server.\n\n This standardization significantly streamlines the workflow and reduces the storage and processing overhead for distributing protected video and audio content, especially in adaptive streaming formats .\n\nIn implementing CENC support, we may want to restrict the allowed cipher modes to only \n\n'cenc': AES-CTR (Advanced Encryption Standard in Counter Mode) for full sample encryption, meaning the entire content of a media sample is encrypted.\n\n'cbcs': AES-CBC for pattern encryption (subsample encryption), encrypting only a pattern of blocks within each media sample.",
      "createdAt": "2025-09-24T20:20:31Z",
      "updatedAt": "2025-09-24T20:20:31Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 9,
      "id": "I_kwDOPVWI587N7rvE",
      "title": "Rename CARP",
      "url": "https://github.com/wilaw/carp/issues/9",
      "state": "OPEN",
      "author": "wilaw",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "See https://github.com/moq-wg/warp-streaming-format/issues/69 about renaming WARP.\n\nCARP name was just a place holder. Use this issue to suggest some practical names for the CMAF-compatible derivative of WARP. \n\n1. CMAF Compatible MOQ Streaming Format (CMSF)\n2. CMAF-4-MOQ-Streaming (C4MS)\n",
      "createdAt": "2025-09-25T20:19:04Z",
      "updatedAt": "2025-09-25T20:19:04Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 3,
      "id": "PR_kwDOPVWI586ku_e8",
      "title": "Addition of metadata scheme and signalling of SAP type and earliest PTS",
      "url": "https://github.com/wilaw/carp/pull/3",
      "state": "MERGED",
      "author": "yekuiwang",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The changes are for:\r\n\r\n1. Addition of metadata scheme and signalling of SAP type and earliest PTS (fixes #2)\r\n2. Fixing two minor editorial issues (fixes #1) \r\n\r\n@wilaw I am not familiar with mechanisms for defining and use of namespaces, thus what I added definitely needs checking. BTW, RFC 9651 obsoletes RFC 8941, thus RFC 9651 is referenced instead. ",
      "createdAt": "2025-08-21T17:34:12Z",
      "updatedAt": "2025-08-26T12:24:42Z",
      "baseRepository": "wilaw/carp",
      "baseRefName": "main",
      "baseRefOid": "35bca27dcc801b0327fe874e3b8f641f873da2d3",
      "headRepository": "yekuiwang/carp",
      "headRefName": "metadata-scheme-sap-type-earliest-pts",
      "headRefOid": "af5318de377de133cc3229fc9d312691a0ec578c",
      "closedAt": "2025-08-26T12:24:42Z",
      "mergedAt": "2025-08-26T12:24:42Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "3354877bd3836c769fad8af5a585eaec171b342a"
      },
      "comments": [
        {
          "author": "yekuiwang",
          "authorAssociation": "CONTRIBUTOR",
          "body": "BTW, for the general metadata scheme that should also be applied to WARP, I tentatively put it herein but added an editing note saying: \"[Ed.Note: This aspect should also be applied to WARP, thus should be moved to WARP later on.]\"",
          "createdAt": "2025-08-21T17:48:22Z",
          "updatedAt": "2025-08-21T17:48:22Z"
        },
        {
          "author": "yekuiwang",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@wilaw Many thanks for the review and all the comments! I addressed all your comments in the commit named \"Changes per Will's review\". Please let me know if some more changes are needed.",
          "createdAt": "2025-08-22T16:28:40Z",
          "updatedAt": "2025-08-22T16:28:40Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOPVWI5867ZRcM",
          "commit": {
            "abbreviatedOid": "d408ed8"
          },
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "Thanks for the PR. I added a number of specific comments around how the namespace is presented, its length and also some editorial suggestions. ",
          "createdAt": "2025-08-22T10:22:09Z",
          "updatedAt": "2025-08-22T10:32:31Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Should you also include an example in which a string value is presented? For example\r\n\r\n\"key1=1,key2=\"\"hello-world\"\",key2=3268\".\r\n\r\n",
              "createdAt": "2025-08-22T10:22:09Z",
              "updatedAt": "2025-08-22T10:32:31Z"
            },
            {
              "originalPosition": 44,
              "body": "Where is this namespace added? Is it the prefix to the key? If so, would be good to explicitly state that. \r\n\r\n```\r\nietf:moq:warp:timeline:metadata:carp:SAP_TYPE\r\nietf:moq:warp:timeline:metadata:carp:EARLIEST_PTS\r\n```\r\n\r\nAlso, what is the separator between the prefix and the key name. Is it : or . or something else?\r\n\r\n```\r\nietf:moq:warp:timeline:metadata:carp.SAP_TYPE\r\nietf:moq:warp:timeline:metadata:carp.EARLIEST_PTS\r\n```\r\n",
              "createdAt": "2025-08-22T10:26:23Z",
              "updatedAt": "2025-08-22T10:32:31Z"
            },
            {
              "originalPosition": 44,
              "body": "`ietf:moq:warp:timeline:metadata:carp`\r\n\r\nDoes it need to be this verbose? Given that we are working within the WARp specification and this namespace will never be applied outside of that, we could probably shorten to\r\n\r\n`warp:timeline:metadata:carp`\r\n\r\nor even to \r\n\r\n`timeline:metadata:carp`\r\n",
              "createdAt": "2025-08-22T10:29:14Z",
              "updatedAt": "2025-08-22T10:32:31Z"
            },
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nWhen the key of a key=value pair is \"CARP.EARLIEST_PTS\", the value indicates the earliest\r\n```",
              "createdAt": "2025-08-22T10:30:20Z",
              "updatedAt": "2025-08-22T10:32:31Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nthe Object is 2 or 3, the CARP.EARLIEST_PTS key SHOULD be present.\r\n```",
              "createdAt": "2025-08-22T10:31:29Z",
              "updatedAt": "2025-08-22T10:32:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPVWI5868E2xd",
          "commit": {
            "abbreviatedOid": "cb6897f"
          },
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-26T12:22:10Z",
          "updatedAt": "2025-08-26T12:22:11Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nthe Object begins with. The namespace-prefixed key is \"timeline:metadata:carp.SAP_TYPE\".\r\n```",
              "createdAt": "2025-08-26T12:22:10Z",
              "updatedAt": "2025-08-26T12:22:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPVWI5868E3dN",
          "commit": {
            "abbreviatedOid": "6a3662c"
          },
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-26T12:23:01Z",
          "updatedAt": "2025-08-26T12:23:02Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "```suggestion\r\nthe Object. The namespace-prefixed key is \"timeline:metadata:carp.SAP_TYPE\".\r\n```",
              "createdAt": "2025-08-26T12:23:02Z",
              "updatedAt": "2025-08-26T12:23:02Z"
            }
          ]
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOPVWI586nzGxH",
      "title": "Refining CMAF box requirements for Object packaging",
      "url": "https://github.com/wilaw/carp/pull/5",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Fixes #6",
      "createdAt": "2025-09-10T11:38:08Z",
      "updatedAt": "2025-09-24T17:24:43Z",
      "baseRepository": "wilaw/carp",
      "baseRefName": "main",
      "baseRefOid": "2f7d0a2bcb579c5c3502aa1afa2821c7562e8d50",
      "headRepository": "wilaw/carp",
      "headRefName": "wilaw-patch-1",
      "headRefOid": "893f8da84da792bbe0497fadb95bfde1c905bdc5",
      "closedAt": "2025-09-24T17:24:38Z",
      "mergedAt": "2025-09-24T17:24:38Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "690c8f166c12da206de9eaff625acbd897b2eb4e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 7,
      "id": "PR_kwDOPVWI586oGFGr",
      "title": "Adding max Group/Ojbect SAP types",
      "url": "https://github.com/wilaw/carp/pull/7",
      "state": "MERGED",
      "author": "yekuiwang",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes: #4",
      "createdAt": "2025-09-11T18:23:08Z",
      "updatedAt": "2025-09-24T20:08:53Z",
      "baseRepository": "wilaw/carp",
      "baseRefName": "main",
      "baseRefOid": "04c0f123e7dfc930ef2bc3a0180019312cd2fa2b",
      "headRepository": "yekuiwang/carp",
      "headRefName": "max-sap-types",
      "headRefOid": "5ae66f414f19151b0c34927541396ac3ba7d2ff9",
      "closedAt": "2025-09-24T20:08:53Z",
      "mergedAt": "2025-09-24T20:08:53Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "9424e7fdf04839e3621e7023d07fce6457165efe"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOPVWI587CjCdF",
          "commit": {
            "abbreviatedOid": "a7103c2"
          },
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "Suggested new names and definitions to clarify what is being communicated. ",
          "createdAt": "2025-09-24T17:36:54Z",
          "updatedAt": "2025-09-24T17:37:29Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Does this really mean the SAP type of the first Object within any Group? Because Group is just a virtual collection of Objects. So how can #maxgrpsaptype and #maxobjsaptype differ, since a Group is just comprised of OBjects.\r\n\r\nSuggest we rename:\r\nMax Group SAP starting type: the Maximum SAP type of the first Object in a Group \r\nMax Group SAP non-starting type: Maximum SAP type contained in second and subsequent Objects within a Group. \r\n",
              "createdAt": "2025-09-24T17:36:54Z",
              "updatedAt": "2025-09-24T17:37:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPVWI587CjcAE",
          "commit": {
            "abbreviatedOid": "a7103c2"
          },
          "author": "yekuiwang",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-24T18:01:11Z",
          "updatedAt": "2025-09-24T18:01:11Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Example: A group starting with non-reordering IDR (SAP type 1), i.e., the first picture in Object 0 (note that an Object can contain multiple coded pictures) is a non-reordering IDR picture, and the Group contains some non-first Objects starting with CRA (SAP type 3), i.e., the first picture in each of these non-first Objects is a CRA picture. Herein #maxgrpsaptype = 1, and #maxobjsaptype = 3.\r\n\r\nChanging the name of #maxgrpsaptype to Max Group SAP starting type is editorial and it is good to me. \r\n\r\nChanging the name of #maxobjsaptype to Max Group SAP non-starting type is technical. Please note that this would make it technically different from @subsegmentStartsWithSAP in DASH. To me that is not as good as keeping the alignment. I prefer to have the alignment, but if you have a strong opinion to change it noting that the alignment is lost, that is OK to me.  ",
              "createdAt": "2025-09-24T18:01:11Z",
              "updatedAt": "2025-09-24T18:01:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPVWI587CkRPB",
          "commit": {
            "abbreviatedOid": "a7103c2"
          },
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-24T19:03:34Z",
          "updatedAt": "2025-09-24T19:03:34Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "OK, I agree on changing name to \"Max Group SAP starting type\". Can you make that editorial change?\r\n\r\nOn the second point, I didn't appreciate that it would break compatibility with @subsegmentStartsWithSAP in DASH, so I agree with your suggestion to keep the name the same. ",
              "createdAt": "2025-09-24T19:03:34Z",
              "updatedAt": "2025-09-24T19:03:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPVWI587CktVX",
          "commit": {
            "abbreviatedOid": "a7103c2"
          },
          "author": "yekuiwang",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-24T19:34:24Z",
          "updatedAt": "2025-09-24T19:34:24Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "@wilaw Done with the editorial change.",
              "createdAt": "2025-09-24T19:34:24Z",
              "updatedAt": "2025-09-24T19:34:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPVWI587ClH15",
          "commit": {
            "abbreviatedOid": "45f1529"
          },
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-24T20:02:12Z",
          "updatedAt": "2025-09-24T20:02:12Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\n#### Max Group SAP starting type {#maxgrpsapstartingtype}\r\n```",
              "createdAt": "2025-09-24T20:02:12Z",
              "updatedAt": "2025-09-24T20:02:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPVWI587ClIZd",
          "commit": {
            "abbreviatedOid": "45f1529"
          },
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-24T20:02:47Z",
          "updatedAt": "2025-09-24T20:02:48Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n#### Max Object SAP starting type {#maxobjsapstartingtype}\r\n```",
              "createdAt": "2025-09-24T20:02:47Z",
              "updatedAt": "2025-09-24T20:02:48Z"
            }
          ]
        }
      ]
    }
  ]
}